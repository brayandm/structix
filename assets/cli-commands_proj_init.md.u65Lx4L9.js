import{_ as i,c as e,o as t,ae as s}from"./chunks/framework.Dh1jimFm.js";const u=JSON.parse('{"title":"Init","description":"","frontmatter":{},"headers":[],"relativePath":"cli-commands/proj/init.md","filePath":"cli-commands/proj/init.md"}'),n={name:"cli-commands/proj/init.md"};function o(r,a,p,c,l,h){return t(),e("div",null,a[0]||(a[0]=[s('<h1 id="init" tabindex="-1">Init <a class="header-anchor" href="#init" aria-label="Permalink to &quot;Init&quot;">​</a></h1><p>Documentation for <code>structix proj init</code> command.</p><p>Initialize a new Structix project configuration.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">structix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> proj</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><h2 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h2><p>This command currently has no options.</p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">structix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> proj</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><p>When you run this command, you will be prompted to confirm if you want to reinitialize an existing project configuration if one is found. You will then select your tech stack, architecture type, and whether to apply Domain-Driven Design (DDD), Hexagonal Architecture, or CQRS. After saving your preferences, the command will create the necessary project structure in your current working directory.</p>',10)]))}const m=i(n,[["render",o]]);export{u as __pageData,m as default};
