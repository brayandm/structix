apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        {{- if .Values.metrics.enabled }}
        monitoring: enabled
        {{- end }}
      annotations:
        {{- if .Values.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.metrics.port }}"
        prometheus.io/path: "{{ .Values.metrics.path }}"
        {{- end }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.container.port }}
          {{- if .Values.resources.enabled }}
          resources:
            requests:
              {{- if .Values.resources.requests.memory }}
              memory: {{ .Values.resources.requests.memory }}
              {{- end }}
              {{- if .Values.resources.requests.cpu }}
              cpu: {{ .Values.resources.requests.cpu }}
              {{- end }}
            limits:
              {{- if .Values.resources.limits.memory }}
              memory: {{ .Values.resources.limits.memory }}
              {{- end }}
              {{- if .Values.resources.limits.cpu }}
              cpu: {{ .Values.resources.limits.cpu }}
              {{- end }}
          {{- end }}
          {{- if .Values.db.enabled }}
          env:
            - name: DB_HOST
              value: "{{ .Release.Name }}-db.default.svc.cluster.local"
            - name: DB_PORT
              value: "{{ .Values.db.port }}"
            - name: DB_USER
              value: "{{ .Values.db.username }}"
            - name: DB_PASSWORD
              value: "{{ .Values.db.password }}"
            - name: DB_DATABASE
              value: "{{ .Values.db.database }}"
          {{- end }}
